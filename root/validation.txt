if 'email' in input_data:
    email_address = inputData['email']
else:
    email_address = ''
response = requests.get(
    "https://isitarealemail.com/api/email/validate",
    params = {'email': email_address})

status = response.json()['status']
if status == "valid":
  print("email is valid")
  output = [{'isValidEmail': 'true'}]
elif status == "invalid":
  print("email is invalid")
  output = [{'isValidEmail': 'false'}]
else:
  print("email was unknown")
  output = [{'isValidEmail': 'true'}]

#src = https://docs.isitarealemail.com/how-to-validate-email-addresses-in-python




import requests

email_address = "foo@bar.com"
response = requests.get(
    "https://isitarealemail.com/api/email/validate",
    params = {'email': email_address})

status = response.json()['status']
if status == "valid":
  print("email is valid")
elif status == "invalid":
  print("email is invalid")
else:
  print("email was unknown")


const response = await fetch('https://maps.googleapis.com/maps/api/geocode/json?address='+inputData.zipcode+'&key=AIzaSyAJGToD7umZ-VdfAl95vSnd1AlxVxt9lUI');
const json = await response.json();
const cities = json.results[0].formatted_address;
const state = json.results[0].address_components[3].short_name;return {"address" : cities, "stconst response = await fetch('https://maps.googleapis.com/maps/api/geocode/json?address='+inputData.zipcode+'&key=AIzaSyAJGToD7umZ-VdfAl95vSnd1AlxVxt9lUI');
const json = await response.json();
const cities = json.results[0].formatted_address;
const state = json.results[0].address_components[3].short_name;return {"address" : cities, "state" : state, "response": json};